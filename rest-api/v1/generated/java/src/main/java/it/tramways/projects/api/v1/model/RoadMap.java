/*
 * Tramways Roadmaps API
 * Tramways Roadmaps API
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.tramways.projects.api.v1.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import it.tramways.projects.api.v1.model.Lane;
import it.tramways.projects.api.v1.model.RelevantPoint;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RoadMap
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-14T00:56:01.025+01:00[Europe/Berlin]")
public class RoadMap {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_POINTS = "points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private List<RelevantPoint> points = null;

  public static final String SERIALIZED_NAME_LANES = "lanes";
  @SerializedName(SERIALIZED_NAME_LANES)
  private List<Lane> lanes = null;


  public RoadMap uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public RoadMap name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RoadMap projectId(String projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectId() {
    return projectId;
  }


  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public RoadMap points(List<RelevantPoint> points) {
    
    this.points = points;
    return this;
  }

  public RoadMap addPointsItem(RelevantPoint pointsItem) {
    if (this.points == null) {
      this.points = new ArrayList<RelevantPoint>();
    }
    this.points.add(pointsItem);
    return this;
  }

   /**
   * Get points
   * @return points
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RelevantPoint> getPoints() {
    return points;
  }


  public void setPoints(List<RelevantPoint> points) {
    this.points = points;
  }


  public RoadMap lanes(List<Lane> lanes) {
    
    this.lanes = lanes;
    return this;
  }

  public RoadMap addLanesItem(Lane lanesItem) {
    if (this.lanes == null) {
      this.lanes = new ArrayList<Lane>();
    }
    this.lanes.add(lanesItem);
    return this;
  }

   /**
   * Get lanes
   * @return lanes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Lane> getLanes() {
    return lanes;
  }


  public void setLanes(List<Lane> lanes) {
    this.lanes = lanes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoadMap roadMap = (RoadMap) o;
    return Objects.equals(this.uuid, roadMap.uuid) &&
        Objects.equals(this.name, roadMap.name) &&
        Objects.equals(this.projectId, roadMap.projectId) &&
        Objects.equals(this.points, roadMap.points) &&
        Objects.equals(this.lanes, roadMap.lanes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, name, projectId, points, lanes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoadMap {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    lanes: ").append(toIndentedString(lanes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

